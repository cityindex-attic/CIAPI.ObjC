//
//  CIAPI<% code.write(objName) %>Request.m
//  CIAPI
//
//  Copyright 2011 Adam Wright/CityIndex. All rights reserved.
//

#import "CIAPI<% code.write(objName) %>Request.h"

<%
  var arrayParamsClasses = {}
  var arrayParamsClassesCount = 0;
  // Handle the array parameter type hinting
  for (parameter in obj.parameters)
  {
    if (obj.parameters[parameter].type == "array")
    {
      var typeName = obj.parameters[parameter].items.type;
      if (typeName == null)
        typeName = apiName(obj.parameters[parameter].items["$ref"]);

      arrayType = schemaTypeToObjCClassName(typeName);
      arrayParamsClasses[obj.parameters[parameter].name] = arrayType;
      arrayParamsClassesCount++;

      if (arrayType.substring(0, 5) == "CIAPI")
      {
%>
#import "<% code.write(arrayType) %>.h"
<%
      }
    }
  }
%>
<% if (apiName(obj.returns["$ref"]).substring(0, 2) != "NS") { %>
#import "<% code.write(apiName(obj.returns["$ref"])) %>.h"
<% } %>

@implementation <% code.write(apiName(objName)) %>Request

<% for (parameter in obj.parameters) { %>
@synthesize <% code.write(safeNameFor(obj.parameters[parameter].name)) %>;
<% } %>

<% if (arrayParamsClassesCount > 0) { %>
- (Class)propertyTypeHintForName:(NSString*)name
{
<%
  for (arrayParam in arrayParamsClasses)
  {
%>
  if ([name isEqualToString:@"<% code.write(arrayParam) %>"]) return [<% code.write(arrayParamsClasses[arrayParam]) %> class];
<%
  }
%>
  return nil;
}
<% } %>

- (enum CIAPIRequestType)requestType
{
    return CIAPIRequest<% code.write(obj.transport) %>;
}

- (NSString*)urlTemplate
{
    return @"<% code.write(obj.target + obj.uriTemplate) %>";
}

- (Class)responseClass
{
    return [<% code.write(apiName(obj.returns["$ref"])) %> class];
}

<% if (obj.throttleScope) { %>
- (NSString*)throttleScope
{
    return @"<% code.write(obj.throttleScope); %>";
}
<% } %>

<% if (obj.cacheDuration) { %>
- (NSTimeInterval)cacheDuration
{
  return <% code.write(obj.cacheDuration / 1000) %>.0;
}
<% } %>

@end

<% fileName = "CIAPI" + objName + "Request.m" %>
